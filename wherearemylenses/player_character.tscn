[gd_scene load_steps=14 format=3 uid="uid://b4ldqopv3c3it"]

[ext_resource type="AudioStream" uid="uid://cjfdo2y2uvdnd" path="res://Assets/_SoundFiles/Breathing/Inhale1.wav" id="1_7hkol"]
[ext_resource type="AudioStream" uid="uid://ngx0lcy5tkva" path="res://Assets/_SoundFiles/Breathing/Inhale2.wav" id="2_lsj7d"]
[ext_resource type="AudioStream" uid="uid://p3qg5e0to3sg" path="res://Assets/_SoundFiles/Breathing/Inhale3.wav" id="3_4kw60"]
[ext_resource type="AudioStream" uid="uid://c0bw0nybpc1vg" path="res://Assets/_SoundFiles/Breathing/Exhale1.wav" id="4_f8x02"]
[ext_resource type="AudioStream" uid="uid://cl068m0bioshk" path="res://Assets/_SoundFiles/Breathing/Exhale2.wav" id="5_rbn80"]
[ext_resource type="AudioStream" uid="uid://clsl730c22tbq" path="res://Assets/_SoundFiles/Breathing/Exhale3.wav" id="6_1qkdv"]

[sub_resource type="GDScript" id="GDScript_25k6p"]
script/source = "extends CharacterBody3D


var block_input := false

var lungs_filled := 0.


const SWIM_SPEED_FORWARD := 1.
const SWIM_SPEED_BACKWARD := .1
const WATER_RESISTANCE := 1.18

@export var MOUSE_SENSITIVITY := 0.005
@export var MOUSE_ACCELERATION := 50.
@export var SPEED := 5.0
@export var ACCEL := 50.0
const BREATHING_SPEED := 1.25


var rotation_target_player : float

func await_game_over() -> void:
	block_input = true
	$AwaitGameOverTimer.start()

func _ready():
	add_to_group(\"character\")
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED


func _input(p_event: InputEvent) -> void:
	if block_input:
		return

	if p_event is InputEventMouseMotion && Input.mouse_mode == Input.MOUSE_MODE_CAPTURED:
		rotation.y -= p_event.relative.x * MOUSE_SENSITIVITY
		$Camera3D.rotation.x -= p_event.relative.y * MOUSE_SENSITIVITY
		
	# TODO: Check for breathing (in/out) and block breathing in once the tank is empty!

	if p_event.is_action_pressed(\"breathe_in\"):
		if lungs_filled < 1. and $StateManagerNode3D.tank_pressure > 0.:
			lungs_filled = minf(lungs_filled + BREATHING_SPEED * get_process_delta_time(), 1.)

			var any_inhale_players_playing := false
			for inhale_player in $AudioStreamPlayersNode/BreathPlayersNode/InhalePlayersNode.get_children():
				var cast_to_inhale_player := inhale_player as AudioStreamPlayer
				if cast_to_inhale_player and cast_to_inhale_player.playing:
					any_inhale_players_playing = true
					break
			if not any_inhale_players_playing:
				var cast_to_random_inhale_player := $AudioStreamPlayersNode/BreathPlayersNode/InhalePlayersNode.get_children().pick_random() as AudioStreamPlayer
				if cast_to_random_inhale_player:
					cast_to_random_inhale_player.play()
		return
	if p_event.is_action_pressed(\"breathe_out\"):
		if lungs_filled > 0.:
			lungs_filled = maxf(lungs_filled - BREATHING_SPEED * get_process_delta_time(), 0.)

			var any_exhale_player_playing := false
			for exhale_player in $AudioStreamPlayersNode/BreathPlayersNode/ExhalePlayersNode.get_children():
				var cast_to_exhale_player := exhale_player as AudioStreamPlayer
				if cast_to_exhale_player and cast_to_exhale_player.playing:
					any_exhale_player_playing = true
					break
			if not any_exhale_player_playing:
				var cast_to_random_exhale_player := $AudioStreamPlayersNode/BreathPlayersNode/ExhalePlayersNode.get_children().pick_random() as AudioStreamPlayer
				if cast_to_random_exhale_player:
					cast_to_random_exhale_player.play()
		return

func _process(p_delta: float) -> void:
	var global_forward_vector := Vector3.FORWARD.rotated(Vector3(0., 1., 0.), rotation.y)
	if not global_forward_vector.is_zero_approx():
		global_forward_vector = global_forward_vector.normalized()
	
	if Input.is_action_pressed(\"forward\"):
		velocity += global_forward_vector * SWIM_SPEED_FORWARD
	elif Input.is_action_pressed(\"backward\"):
		velocity -= global_forward_vector * SWIM_SPEED_BACKWARD

	velocity /= WATER_RESISTANCE
	
func _physics_process(p_delta: float) -> void:
	move_and_slide()


# TODO: Make this boi unload world.tscn and open a game over menu!
func _on_await_game_over_timer_timeout() -> void:
	queue_free()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_xk0f7"]

[sub_resource type="GDScript" id="GDScript_p4012"]
script/source = "extends Camera3D


var rotation_amplitude := 0.
var time_passed := 0.

const ROTATION_SPEED := 1.


#func _process(p_delta: float) -> void:
	#time_passed += p_delta
#
	#rotation_amplitude = $\"..\".velocity.length() / 10.
	#rotation_amplitude = clampf(rotation_amplitude, 0., 1.)
#
	#rotation.z = sin(time_passed * ROTATION_SPEED) * rotation_amplitude
"

[sub_resource type="GDScript" id="GDScript_cqw7g"]
script/source = "extends Sprite2D


var tex_bubbles_none = load(\"res://Assets/Player_RightHand/PlayerRightHand_1_Clean_Open.png\")
var tex_bubbles_few = load(\"res://Assets/Player_RightHand/PlayerRightHand_2_Decomp_Few.png\")
var tex_bubbles_many = load(\"res://Assets/Player_RightHand/PlayerRightHand_2_Decomp_Few.png\") # placeholder
var tex_bubbles_all = load(\"res://Assets/Player_RightHand/PlayerRightHand_2_Decomp_Few.png\") # placeholder

enum Bubbles
{
	BUBBLES_NONE = 0,
	BUBBLES_FEW = 1,
	BUBBLES_MANY = 2,
	BUBBLES_ALL = 3,
}


func _ready() -> void:
	texture = tex_bubbles_none


func set_bubbles_state(p_bubbles: Bubbles) -> void:
	if p_bubbles == Bubbles.BUBBLES_NONE and tex_bubbles_none:
		texture = tex_bubbles_none
		return
	if p_bubbles == Bubbles.BUBBLES_FEW and tex_bubbles_few:
		texture = tex_bubbles_few
		return
	if p_bubbles == Bubbles.BUBBLES_MANY and tex_bubbles_many:
		texture = tex_bubbles_many
		return
	if p_bubbles == Bubbles.BUBBLES_ALL and tex_bubbles_all:
		texture = tex_bubbles_all
		$\"../../AwaitGameOverTimer\".start
		return
	printerr(\"Passed set_bubbles_state an invalid argument or texture is invalid!\")
"

[sub_resource type="GDScript" id="GDScript_d3jor"]
script/source = "extends Sprite2D

var tex_barometer_clean := load(\"res://Assets/Player_LeftHand/Player_LeftHand_1_Clean.png\")
var tex_barometer_cursed := load(\"res://Assets/Player_Meter/Meter_2_Cursed.png\")

var tex_needle := load(\"res://Assets/Player_Meter/Meter_Needle.png\")

@onready var offscreen_position := get_position()
var onscreen_position = Vector2(120., 475.)

var position_tween : Tween = null


const FADEIN_DURATION := .5
const FADEOUT_DURATION := .5


func _ready() -> void:
	texture = tex_barometer_clean

func _process(p_delta: float) -> void:
	pass

func _input(p_event: InputEvent) -> void:
	if p_event.is_action_pressed(\"finimeter_visibility\"):
		if position_tween:
			position_tween.kill()
			position_tween = null
		position_tween = create_tween()
		position_tween.tween_property(self, \"position\", onscreen_position, FADEIN_DURATION)
		return
	if p_event.is_action_released(\"finimeter_visibility\"):
		if position_tween:
			position_tween.kill()
			position_tween = null
		position_tween = create_tween()
		position_tween.tween_property(self, \"position\", offscreen_position, FADEOUT_DURATION)
		return
"

[sub_resource type="GDScript" id="GDScript_j4p65"]
script/source = "extends Sprite2D


var tex_needle := load(\"res://Assets/Player_Meter/Meter_Needle_V2.png\")


func _ready() -> void:
	texture = tex_needle

func set_needle(p_value: float) -> void:
	rotation = clampf(p_value, 0., 1.) * PI - PI / 2.
"

[sub_resource type="GDScript" id="GDScript_rr2cc"]
script/source = "extends Node3D


var tank_pressure := MAX_TANK_PRESSURE

var nitrogen_saturation := 0.

const MAX_TANK_PRESSURE := 200.

const NITROGEN_SATURATION_RATE := 1. # This value is a factor for the nitrogen_saturation increase/decrease.
const MAX_NITROGEN_EXCESS := 24. # This valua is used to check for decompression sickness.
const MAX_NITROGEN_SATURATION := 100. # nitrogen_saturation > MAX_NITROGEN_SATURATION leads to max depth_intoxication.

func _process(p_delta: float) -> void:
	tank_pressure -= p_delta * 5.
	$\"../Camera3D/CanvasLayer/ArmLeftSprite2D/NeedleSprite2D\".set_needle(tank_pressure / MAX_TANK_PRESSURE)

	nitrogen_saturation = lerp(nitrogen_saturation, global_position.z, p_delta * NITROGEN_SATURATION_RATE)

	var depth_intoxication := nitrogen_saturation / MAX_NITROGEN_SATURATION
	if randf() < depth_intoxication:
		do_something_cursed()

	var bubbles_state := int(minf(global_position.z - nitrogen_saturation, 0.) / MAX_NITROGEN_EXCESS)
	$\"../Camera3D/CanvasLayer/ArmRightSprite2D\".set_bubbles_state(bubbles_state)

	if bubbles_state >= 3:
		$\"..\".await_game_over()

# This function shall select a 
func do_something_cursed() -> void:
	pass
"

[node name="PlayerCharacter" type="CharacterBody3D"]
motion_mode = 1
script = SubResource("GDScript_25k6p")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0)
shape = SubResource("CapsuleShape3D_xk0f7")

[node name="Camera3D" type="Camera3D" parent="."]
script = SubResource("GDScript_p4012")

[node name="CanvasLayer" type="CanvasLayer" parent="Camera3D"]

[node name="ArmRightSprite2D" type="Sprite2D" parent="Camera3D/CanvasLayer"]
position = Vector2(1050, 475)
scale = Vector2(0.375, 0.375)
script = SubResource("GDScript_cqw7g")

[node name="ArmLeftSprite2D" type="Sprite2D" parent="Camera3D/CanvasLayer"]
position = Vector2(120, 950)
scale = Vector2(0.375, 0.375)
script = SubResource("GDScript_d3jor")

[node name="NeedleSprite2D" type="Sprite2D" parent="Camera3D/CanvasLayer/ArmLeftSprite2D"]
position = Vector2(16, -72)
script = SubResource("GDScript_j4p65")

[node name="AwaitGameOverTimer" type="Timer" parent="."]
wait_time = 5.0
one_shot = true

[node name="StateManagerNode3D" type="Node3D" parent="."]
script = SubResource("GDScript_rr2cc")

[node name="AudioStreamPlayersNode" type="Node" parent="."]

[node name="BreathPlayersNode" type="Node" parent="AudioStreamPlayersNode"]

[node name="InhalePlayersNode" type="Node" parent="AudioStreamPlayersNode/BreathPlayersNode"]

[node name="Inhale0AudioStreamPlayer" type="AudioStreamPlayer" parent="AudioStreamPlayersNode/BreathPlayersNode/InhalePlayersNode"]
stream = ExtResource("1_7hkol")

[node name="Inhale1AudioStreamPlayer" type="AudioStreamPlayer" parent="AudioStreamPlayersNode/BreathPlayersNode/InhalePlayersNode"]
stream = ExtResource("2_lsj7d")

[node name="Inhale2AudioStreamPlayer" type="AudioStreamPlayer" parent="AudioStreamPlayersNode/BreathPlayersNode/InhalePlayersNode"]
stream = ExtResource("3_4kw60")

[node name="ExhalePlayersNode" type="Node" parent="AudioStreamPlayersNode/BreathPlayersNode"]

[node name="Exhale0AudioStreamPlayer" type="AudioStreamPlayer" parent="AudioStreamPlayersNode/BreathPlayersNode/ExhalePlayersNode"]
stream = ExtResource("4_f8x02")

[node name="Exhale1AudioStreamPlayer" type="AudioStreamPlayer" parent="AudioStreamPlayersNode/BreathPlayersNode/ExhalePlayersNode"]
stream = ExtResource("5_rbn80")

[node name="Exhale2AudioStreamPlayer" type="AudioStreamPlayer" parent="AudioStreamPlayersNode/BreathPlayersNode/ExhalePlayersNode"]
stream = ExtResource("6_1qkdv")

[connection signal="timeout" from="AwaitGameOverTimer" to="." method="_on_await_game_over_timer_timeout"]
