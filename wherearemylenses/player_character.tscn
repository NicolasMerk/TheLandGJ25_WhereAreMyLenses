[gd_scene load_steps=7 format=3 uid="uid://67axyi1xr1bu"]

[ext_resource type="PackedScene" uid="uid://brir8kp0x6dgb" path="res://Assets/PlayerCharacter/Comp/camera_3d.tscn" id="1_vrj06"]
[ext_resource type="PackedScene" uid="uid://r27l3esvu3kr" path="res://Assets/PlayerCharacter/Comp/state_manager_node_3d.tscn" id="2_x25h4"]
[ext_resource type="PackedScene" uid="uid://cwcpl1h4ugsm3" path="res://Assets/PlayerCharacter/Comp/audio_stream_players_node.tscn" id="3_ehnau"]
[ext_resource type="PackedScene" uid="uid://cba8njpubahpl" path="res://Assets/PlayerCharacter/Comp/gpu_particles_3d.tscn" id="4_bh4lv"]

[sub_resource type="GDScript" id="GDScript_25k6p"]
script/source = "extends CharacterBody3D


var block_input := false

# 0. - 1.
var lungs_filled := 0.
var jacket_filled := .5

@export var JACKET_FILL_RATE := .5
@export var JACKET_EMPTY_RATE := .5
const JACKET_LUNGS_WEIGHT := 3.5
@export var FALLSPEED := 1.

@export var SWIM_SPEED_FORWARD := 0.5
const SWIM_SPEED_BACKWARD := .1
const WATER_RESISTANCE := 1.18

const TANK_DEPLETION_FACTOR := 6.
const OXYGEN_RESTORATION_FACTOR := 16.

@export var MOUSE_SENSITIVITY := 0.005
@export var MOUSE_ACCELERATION := 50.

const BREATHING_SPEED := 1.25


var rotation_target_player : float

func await_game_over() -> void:
	block_input = true
	$AwaitGameOverTimer.start()

func _ready():
	add_to_group(\"character\")
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED


func _input(p_event: InputEvent) -> void:
	if block_input:
		return

	if p_event is InputEventMouseMotion && Input.mouse_mode == Input.MOUSE_MODE_CAPTURED:
		rotation.y -= p_event.relative.x * MOUSE_SENSITIVITY
		$Camera3D.rotation.x -= p_event.relative.y * MOUSE_SENSITIVITY

	if p_event.is_action_pressed(\"breathe_in\"):
		if lungs_filled < 1. and $StateManagerNode3D.tank_pressure > 0.:
			lungs_filled = minf(lungs_filled + BREATHING_SPEED * get_process_delta_time(), 1.)

			$StateManagerNode3D.tank_pressure -= get_process_delta_time() * TANK_DEPLETION_FACTOR
			$StateManagerNode3D.oxygen_saturation = minf($StateManagerNode3D.oxygen_saturation + get_process_delta_time() * OXYGEN_RESTORATION_FACTOR, $StateManagerNode3D.MAX_OXYGEN_SATURATION)

			var any_inhale_players_playing := false
			for inhale_player in $AudioStreamPlayersNode/BreathPlayersNode/InhalePlayersNode.get_children():
				var cast_to_inhale_player := inhale_player as AudioStreamPlayer
				if cast_to_inhale_player and cast_to_inhale_player.playing:
					any_inhale_players_playing = true
					break
			if not any_inhale_players_playing:
				var cast_to_random_inhale_player := $AudioStreamPlayersNode/BreathPlayersNode/InhalePlayersNode.get_children().pick_random() as AudioStreamPlayer
				if cast_to_random_inhale_player:
					cast_to_random_inhale_player.play()
		return
	if p_event.is_action_pressed(\"breathe_out\"):
		if lungs_filled > 0.:
			lungs_filled = maxf(lungs_filled - BREATHING_SPEED * get_process_delta_time(), 0.)

			var any_exhale_player_playing := false
			for exhale_player in $AudioStreamPlayersNode/BreathPlayersNode/ExhalePlayersNode.get_children():
				var cast_to_exhale_player := exhale_player as AudioStreamPlayer
				if cast_to_exhale_player and cast_to_exhale_player.playing:
					any_exhale_player_playing = true
					break
			if not any_exhale_player_playing:
				var cast_to_random_exhale_player := $AudioStreamPlayersNode/BreathPlayersNode/ExhalePlayersNode.get_children().pick_random() as AudioStreamPlayer
				if cast_to_random_exhale_player:
					cast_to_random_exhale_player.play()
		return

func _process(p_delta: float) -> void:
	var global_forward_vector := Vector3.FORWARD.rotated(Vector3(0., 1., 0.), rotation.y)
	if not global_forward_vector.is_zero_approx():
		global_forward_vector = global_forward_vector.normalized()
	
	if Input.is_action_pressed(\"forward\"):
		velocity += global_forward_vector * SWIM_SPEED_FORWARD
	elif Input.is_action_pressed(\"backward\"):
		velocity -= global_forward_vector * SWIM_SPEED_BACKWARD

	velocity /= WATER_RESISTANCE


	if Input.is_action_pressed(\"jacket_up\") and not Input.is_action_pressed(\"jacket_down\") and jacket_filled < 1.:
		jacket_filled = minf(jacket_filled + p_delta * JACKET_FILL_RATE, 1.)
		if $AudioStreamPlayersNode/JacketPlayersNode/JacketInPlayer.stream and not $AudioStreamPlayersNode/JacketPlayersNode/JacketInPlayer.playing:
			$AudioStreamPlayersNode/JacketPlayersNode/JacketInPlayer.play()
	elif Input.is_action_pressed(\"jacket_down\") and not Input.is_action_pressed(\"jacket_up\") and jacket_filled > 0.:
		jacket_filled = maxf(jacket_filled - p_delta * JACKET_EMPTY_RATE, 0.)
		if $AudioStreamPlayersNode/JacketPlayersNode/JacketOutPlayer.stream and not $AudioStreamPlayersNode/JacketPlayersNode/JacketOutPlayer.playing:
			$AudioStreamPlayersNode/JacketPlayersNode/JacketOutPlayer.play()
	else:
		$AudioStreamPlayersNode/JacketPlayersNode/JacketInPlayer.stop()
		$AudioStreamPlayersNode/JacketPlayersNode/JacketOutPlayer.stop()


func _physics_process(p_delta: float) -> void:
	velocity.y = (lungs_filled + jacket_filled * JACKET_LUNGS_WEIGHT) - (1. + JACKET_LUNGS_WEIGHT) / 2.
	velocity.y *= FALLSPEED
	move_and_slide()


# TODO: Make this boi unload world.tscn and open a game over menu!
func _on_await_game_over_timer_timeout() -> void:
	queue_free()


func _on_transition_1_body_entered(body: Node3D) -> void:
	if body == self:
		$AudioStreamPlayersNode/ravel.play()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_xk0f7"]

[node name="PlayerCharacter" type="CharacterBody3D"]
motion_mode = 1
script = SubResource("GDScript_25k6p")
JACKET_FILL_RATE = 20.0
JACKET_EMPTY_RATE = 100.0
FALLSPEED = 10.0
SWIM_SPEED_FORWARD = 8.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0)
shape = SubResource("CapsuleShape3D_xk0f7")

[node name="Camera3D" parent="." instance=ExtResource("1_vrj06")]

[node name="AwaitGameOverTimer" type="Timer" parent="."]
wait_time = 5.0
one_shot = true

[node name="StateManagerNode3D" parent="." instance=ExtResource("2_x25h4")]

[node name="AudioStreamPlayersNode" parent="." instance=ExtResource("3_ehnau")]

[node name="GPUParticles3D" parent="." instance=ExtResource("4_bh4lv")]

[connection signal="timeout" from="AwaitGameOverTimer" to="." method="_on_await_game_over_timer_timeout"]
